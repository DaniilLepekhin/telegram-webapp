import React, { useEffect, useState } from 'react';
import Showcase from './components/Showcase';
import DemoChat from './components/DemoChat';
import ReferralSystem from './components/ReferralSystem';
import UserProfile from './components/UserProfile';
import AnalyticsFeedback from './components/AnalyticsFeedback';
import ChannelAnalytics from './components/ChannelAnalytics';
import PostAnalytics from './components/PostAnalytics';
import TelegramIntegration from './components/TelegramIntegration';
import PostTracking from './components/PostTracking';
import TestBackButton from './components/TestBackButton';

const tg = window.Telegram?.WebApp;

type Page = 'main' | 'showcase' | 'chat' | 'referral' | 'profile' | 'analytics' | 'channel-analytics' | 'post-analytics' | 'telegram-integration' | 'post-tracking' | 'test-back';

function App() {
  const [currentPage, setCurrentPage] = useState<Page>('main');
  const [theme, setTheme] = useState(tg?.colorScheme || 'default');
  const [initData, setInitData] = useState(tg?.initData || '');
  const [mainButtonClicked, setMainButtonClicked] = useState(false);
  const [backButtonClicked, setBackButtonClicked] = useState(false);
  const [isExpanded, setIsExpanded] = useState(false);
  const [viewportHeight, setViewportHeight] = useState(0);

  useEffect(() => {
    if (tg) {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp —Å –ø–æ–ª–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º
      console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–≥–æ Telegram WebApp...');
      
      // –†–∞—Å—à–∏—Ä—è–µ–º –Ω–∞ –ø–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω
      tg.expand();
      setIsExpanded(true);
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É viewport
      setViewportHeight(tg.viewportHeight);
      
      // –ì–æ—Ç–æ–≤–∏–º WebApp
      tg.ready();
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º MainButton
      tg.MainButton.setText('üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ');
      tg.MainButton.show();
      tg.MainButton.onClick(() => {
        setMainButtonClicked(true);
        const data = {
          action: 'demo',
          value: '–ü—Ä–∏–≤–µ—Ç –∏–∑ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–≥–æ WebApp!',
          timestamp: new Date().toISOString(),
          page: currentPage,
          theme: tg.colorScheme
        };
        tg.sendData(JSON.stringify(data));
      });
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º BackButton
      tg.BackButton.show();
      tg.BackButton.onClick(() => {
        setBackButtonClicked(true);
        if (currentPage === 'main') {
          tg.close();
        } else {
          setCurrentPage('main');
        }
      });
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É
      setTheme(tg.colorScheme);
      setInitData(tg.initData);
      
      // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ WebApp
      console.log('üì± WebApp –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:', {
        platform: tg.platform,
        colorScheme: tg.colorScheme,
        themeParams: tg.themeParams,
        initData: tg.initData,
        initDataUnsafe: tg.initDataUnsafe,
        version: tg.version,
        isExpanded: tg.isExpanded,
        viewportHeight: tg.viewportHeight,
        viewportStableHeight: tg.viewportStableHeight,
        headerColor: tg.headerColor,
        backgroundColor: tg.backgroundColor,
        isClosingConfirmationEnabled: tg.isClosingConfirmationEnabled
      });
      
      // –í–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è
      tg.enableClosingConfirmation();
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞
      tg.setHeaderColor('#2B2D42');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞
      tg.setBackgroundColor('#1A1B26');
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è viewport
      tg.onEvent('viewportChanged', () => {
        console.log('üì± Viewport –∏–∑–º–µ–Ω–∏–ª—Å—è:', {
          height: tg.viewportHeight,
          stableHeight: tg.viewportStableHeight,
          isExpanded: tg.isExpanded
        });
        setViewportHeight(tg.viewportHeight);
        setIsExpanded(tg.isExpanded);
      });
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º—ã
      tg.onEvent('themeChanged', () => {
        console.log('üé® –¢–µ–º–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å:', tg.colorScheme);
        setTheme(tg.colorScheme);
      });
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ viewport
      tg.onEvent('mainButtonClicked', () => {
        console.log('üîò MainButton –Ω–∞–∂–∞—Ç');
      });
      
      tg.onEvent('backButtonClicked', () => {
        console.log('‚¨ÖÔ∏è BackButton –Ω–∞–∂–∞—Ç');
      });
      
      tg.onEvent('settingsButtonClicked', () => {
        console.log('‚öôÔ∏è SettingsButton –Ω–∞–∂–∞—Ç');
      });
      
      tg.onEvent('invoiceClosed', (eventData) => {
        console.log('üí≥ Invoice –∑–∞–∫—Ä—ã—Ç:', eventData);
      });
      
      tg.onEvent('popupClosed', (eventData) => {
        console.log('üìã Popup –∑–∞–∫—Ä—ã—Ç:', eventData);
      });
      
      tg.onEvent('qrTextReceived', (eventData) => {
        console.log('üì± QR –∫–æ–¥ –ø–æ–ª—É—á–µ–Ω:', eventData);
      });
      
      tg.onEvent('clipboardTextReceived', (eventData) => {
        console.log('üìã –¢–µ–∫—Å—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞:', eventData);
      });
      
      tg.onEvent('writeAccessRequested', (eventData) => {
        console.log('‚úèÔ∏è –ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–ø–∏—Å—å:', eventData);
      });
      
      tg.onEvent('contactRequested', (eventData) => {
        console.log('üë§ –ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞:', eventData);
      });
      
      tg.onEvent('customMethodInvoked', (eventData) => {
        console.log('üîß –ö–∞—Å—Ç–æ–º–Ω—ã–π –º–µ—Ç–æ–¥ –≤—ã–∑–≤–∞–Ω:', eventData);
      });
      
      console.log('‚úÖ –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–π WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!');
    }
    
    return () => {
      if (tg) {
        // –û—á–∏—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        tg.offEvent('viewportChanged');
        tg.offEvent('themeChanged');
        tg.offEvent('mainButtonClicked');
        tg.offEvent('backButtonClicked');
        tg.offEvent('settingsButtonClicked');
        tg.offEvent('invoiceClosed');
        tg.offEvent('popupClosed');
        tg.offEvent('qrTextReceived');
        tg.offEvent('clipboardTextReceived');
        tg.offEvent('writeAccessRequested');
        tg.offEvent('contactRequested');
        tg.offEvent('customMethodInvoked');
        
        // –û—á–∏—â–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
        tg.MainButton.onClick(() => {});
        tg.BackButton.onClick(() => {});
      }
    };
  }, [currentPage]);

  const navigateTo = (page: Page) => {
    setCurrentPage(page);
    if (tg) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º BackButton —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      if (page === 'main') {
        tg.BackButton.hide();
      } else {
        tg.BackButton.show();
      }
      
      // –û–±–Ω–æ–≤–ª—è–µ–º MainButton –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      switch (page) {
        case 'showcase':
          tg.MainButton.setText('üéØ –í—ã–±—Ä–∞—Ç—å –∫–µ–π—Å');
          break;
        case 'chat':
          tg.MainButton.setText('üí¨ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ');
          break;
        case 'analytics':
          tg.MainButton.setText('üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö');
          break;
        case 'post-tracking':
          tg.MainButton.setText('üîó –°–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É');
          break;
        default:
          tg.MainButton.setText('üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ');
      }
    }
  };

  const renderPage = () => {
    switch (currentPage) {
      case 'showcase':
        return <Showcase />;
      case 'chat':
        return <DemoChat />;
      case 'referral':
        return <ReferralSystem />;
      case 'profile':
        return <UserProfile />;
      case 'analytics':
        return <AnalyticsFeedback />;
      case 'channel-analytics':
        return <ChannelAnalytics />;
      case 'post-analytics':
        return <PostAnalytics />;
      case 'telegram-integration':
        return <TelegramIntegration />;
      case 'post-tracking':
        return <PostTracking />;
      case 'test-back':
        return <TestBackButton />;
      default:
        return (
          <div 
            className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-blue-500 to-purple-600 text-white p-4"
            style={{ 
              minHeight: viewportHeight ? `${viewportHeight}px` : '100vh',
              background: theme === 'dark' ? 'linear-gradient(135deg, #1a1b26 0%, #2b2d42 100%)' : 'linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%)'
            }}
          >
            <div className="p-8 rounded-xl shadow-xl bg-white bg-opacity-10 backdrop-blur-md w-full max-w-md">
              <h1 className="text-3xl font-bold mb-4 text-center">
                üöÄ –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–π WebApp
              </h1>
              <p className="text-lg mb-6 text-center">
                –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–∞—è –≤–∏—Ç—Ä–∏–Ω–∞ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ Telegram Web Apps API
              </p>
              
              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ WebApp */}
              <div className="mb-6 p-4 bg-black bg-opacity-20 rounded-lg text-sm">
                <p>üì± –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {tg?.platform || 'Unknown'}</p>
                <p>üé® –¢–µ–º–∞: {theme}</p>
                <p>üìè –í—ã—Å–æ—Ç–∞: {viewportHeight}px</p>
                <p>üñºÔ∏è –ü–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω: {isExpanded ? '‚úÖ' : '‚ùå'}</p>
                <p>üîß –í–µ—Ä—Å–∏—è API: {tg?.version || 'Unknown'}</p>
              </div>
              
              <div className="space-y-4">
                <button
                  onClick={() => navigateTo('showcase')}
                  className="w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white py-4 px-6 rounded-lg font-medium hover:from-blue-700 hover:to-purple-700 transition-all transform hover:scale-105 text-lg"
                >
                  üéØ –í–∏—Ç—Ä–∏–Ω–∞ –∫–µ–π—Å–æ–≤
                </button>
                
                <button
                  onClick={() => navigateTo('chat')}
                  className="w-full bg-gradient-to-r from-green-600 to-teal-600 text-white py-3 px-4 rounded-lg font-medium hover:from-green-700 hover:to-teal-700 transition-all transform hover:scale-105"
                >
                  üí¨ –î–µ–º–æ-—á–∞—Ç
                </button>
                
                <button
                  onClick={() => navigateTo('channel-analytics')}
                  className="w-full bg-gradient-to-r from-indigo-600 to-blue-600 text-white py-3 px-4 rounded-lg font-medium hover:from-indigo-700 hover:to-blue-700 transition-all transform hover:scale-105"
                >
                  üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–æ–≤
                </button>
                
                <button
                  onClick={() => navigateTo('post-analytics')}
                  className="w-full bg-gradient-to-r from-purple-600 to-pink-600 text-white py-3 px-4 rounded-lg font-medium hover:from-purple-700 hover:to-pink-700 transition-all transform hover:scale-105"
                >
                  üìù –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ—Å—Ç–æ–≤
                </button>
                
                <button
                  onClick={() => navigateTo('post-tracking')}
                  className="w-full bg-gradient-to-r from-red-600 to-orange-600 text-white py-3 px-4 rounded-lg font-medium hover:from-red-700 hover:to-orange-700 transition-all transform hover:scale-105"
                >
                  üîó –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤
                </button>
                
                <button
                  onClick={() => navigateTo('referral')}
                  className="w-full bg-gradient-to-r from-yellow-600 to-orange-600 text-white py-3 px-4 rounded-lg font-medium hover:from-yellow-700 hover:to-orange-700 transition-all transform hover:scale-105"
                >
                  üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
                </button>
                
                <button
                  onClick={() => navigateTo('profile')}
                  className="w-full bg-gradient-to-r from-gray-600 to-gray-700 text-white py-3 px-4 rounded-lg font-medium hover:from-gray-700 hover:to-gray-800 transition-all transform hover:scale-105"
                >
                  üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                </button>
                
                <button
                  onClick={() => navigateTo('analytics')}
                  className="w-full bg-gradient-to-r from-emerald-600 to-teal-600 text-white py-3 px-4 rounded-lg font-medium hover:from-emerald-700 hover:to-teal-700 transition-all transform hover:scale-105"
                >
                  üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ & –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
                </button>
                
                <button
                  onClick={() => navigateTo('telegram-integration')}
                  className="w-full bg-gradient-to-r from-cyan-600 to-blue-600 text-white py-3 px-4 rounded-lg font-medium hover:from-cyan-700 hover:to-blue-700 transition-all transform hover:scale-105"
                >
                  ‚öôÔ∏è –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram
                </button>
                
                <button
                  onClick={() => navigateTo('test-back')}
                  className="w-full bg-gradient-to-r from-yellow-500 to-orange-500 text-black py-4 px-6 rounded-lg font-bold hover:from-yellow-400 hover:to-orange-400 transition-all transform hover:scale-105 text-lg border-2 border-black"
                >
                  üß™ –¢–ï–°–¢ –ö–ù–û–ü–ö–ò "–ù–ê–ó–ê–î"
                </button>
              </div>
              
              {/* –°—Ç–∞—Ç—É—Å –∫–Ω–æ–ø–æ–∫ */}
              <div className="mt-6 p-4 bg-black bg-opacity-20 rounded-lg text-sm">
                <p>üîò MainButton: {mainButtonClicked ? '–ù–∞–∂–∞—Ç ‚úÖ' : '–û–∂–∏–¥–∞–µ—Ç'}</p>
                <p>‚¨ÖÔ∏è BackButton: {backButtonClicked ? '–ù–∞–∂–∞—Ç ‚úÖ' : '–û–∂–∏–¥–∞–µ—Ç'}</p>
              </div>
            </div>
          </div>
        );
    }
  };

  return (
    <div className="App">
      {renderPage()}
    </div>
  );
}

export default App; 