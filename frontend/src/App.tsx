import React, { useState, useEffect, useCallback } from 'react';
import ChannelAnalytics from './components/ChannelAnalytics';
import Showcase from './components/Showcase';
import DemoChat from './components/DemoChat';
import ReferralSystem from './components/ReferralSystem';
import UserProfile from './components/UserProfile';
import AnalyticsFeedback from './components/AnalyticsFeedback';
import PostAnalytics from './components/PostAnalytics';
import TelegramIntegration from './components/TelegramIntegration';
import PostTracking from './components/PostTracking';
import PostBuilder from './components/PostBuilder';
import TestPage from './components/TestPage';
import BackButton from './components/BackButton';
import FullscreenButton from './components/FullscreenButton';

type Page = 'main' | 'analytics' | 'showcase' | 'demo-chat' | 'referral' | 'user-profile' | 'feedback' | 'post-analytics' | 'telegram-integration' | 'post-tracking' | 'post-builder' | 'test';

function App() {
  // –†–ê–î–ò–ö–ê–õ–¨–ù–û–ï –†–ï–®–ï–ù–ò–ï: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞
  const [currentPage, setCurrentPage] = useState<Page>('main');
  const [previousPage, setPreviousPage] = useState<Page | null>(null);
  const [isExpanded, setIsExpanded] = useState(false);
  const [pageRenderKey, setPageRenderKey] = useState(0); // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä –í–°–ï–ì–û
  const [isNavigating, setIsNavigating] = useState(false);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
  useEffect(() => {
    if (window.Telegram?.WebApp) {
      const webApp = window.Telegram.WebApp;
      webApp.ready();
      
      // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
      setIsExpanded(webApp.isExpanded);
      
      const handleViewportChanged = () => {
        setIsExpanded(webApp.isExpanded);
      };
      
      webApp.onEvent('viewportChanged', handleViewportChanged);
      
      return () => {
        webApp.offEvent('viewportChanged', handleViewportChanged);
      };
    }
  }, []);

  // –†–ê–î–ò–ö–ê–õ–¨–ù–´–ô –°–ë–†–û–° –°–ö–†–û–õ–õ–ê - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π
  const forceScrollReset = useCallback(() => {
    // –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–±—Ä–æ—Å —Å–∫—Ä–æ–ª–ª–∞
    const resetActions = [
      () => window.scrollTo({ top: 0, left: 0, behavior: 'instant' }),
      () => window.scrollTo(0, 0),
      () => { document.documentElement.scrollTop = 0; },
      () => { document.body.scrollTop = 0; },
      () => { 
        if (window.Telegram?.WebApp) {
          window.Telegram.WebApp.expand();
        }
      },
      () => {
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–±—Ä–æ—Å —á–µ—Ä–µ–∑ DOM
        const allElements = document.querySelectorAll('*');
        allElements.forEach(el => {
          if (el.scrollTop) el.scrollTop = 0;
          if (el.scrollLeft) el.scrollLeft = 0;
        });
      }
    ];

    // –í—ã–ø–æ–ª–Ω—è–µ–º —Å–±—Ä–æ—Å –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ
    resetActions.forEach(action => action());
    
    // –ü–æ–≤—Ç–æ—Ä—è–µ–º —á–µ—Ä–µ–∑ RAF
    requestAnimationFrame(() => {
      resetActions.forEach(action => action());
      
      // –ò –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ timeout
      setTimeout(() => {
        resetActions.forEach(action => action());
      }, 0);
    });
  }, []);

  // –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –≤–µ—Ä—Ö—É –ø—Ä–∏ —Å–º–µ–Ω–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  useEffect(() => {
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–∫—Ä–æ–ª–ª–∞
    const resetScroll = () => {
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞
      document.body.classList.add('scroll-reset');
      
      window.scrollTo({ top: 0, left: 0, behavior: 'instant' });
      document.documentElement.scrollTop = 0;
      document.body.scrollTop = 0;
      
      // –î–ª—è Telegram WebApp
      if (window.Telegram?.WebApp) {
        window.Telegram.WebApp.expand();
      }
      
      // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è
      setTimeout(() => {
        document.body.classList.remove('scroll-reset');
      }, 100);
    };

    // –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–π —Å–±—Ä–æ—Å
    resetScroll();
    
    // –°–±—Ä–æ—Å –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞
    requestAnimationFrame(() => {
      resetScroll();
      
      // –ï—â–µ –æ–¥–∏–Ω —Å–±—Ä–æ—Å –ø–æ—Å–ª–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ñ—Ä–µ–π–º–∞
      requestAnimationFrame(() => {
        resetScroll();
      });
    });
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–±—Ä–æ—Å—ã —Å —Ä–∞–∑–Ω—ã–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏
    const timeouts = [50, 100, 200, 500].map(delay => 
      setTimeout(resetScroll, delay)
    );
    
    // –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–∞—É—Ç–æ–≤ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      timeouts.forEach(clearTimeout);
    };
  }, [currentPage]);

  // –†–ê–î–ò–ö–ê–õ–¨–ù–ê–Ø –ù–ê–í–ò–ì–ê–¶–ò–Ø: –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const navigateTo = (page: Page) => {
    if (currentPage !== page) {
      setIsNavigating(true);
      
      // 1. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–±—Ä–æ—Å —Å–∫—Ä–æ–ª–ª–∞
      forceScrollReset();
      
      // 2. –ü–æ–ª–Ω–æ–µ –æ–±–Ω—É–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      setTimeout(() => {
        setPreviousPage(currentPage);
        setCurrentPage(page);
        setPageRenderKey(prev => prev + 1000); // –ë–æ–ª—å—à–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª—é—á–∞
        
        // 3. –ï—â–µ –æ–¥–∏–Ω —Å–±—Ä–æ—Å –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏—è
        setTimeout(() => {
          forceScrollReset();
          setIsNavigating(false);
        }, 10);
      }, 10);
    }
  };

  // –†–ê–î–ò–ö–ê–õ–¨–ù–´–ô –í–û–ó–í–†–ê–¢
  const goBack = () => {
    navigateTo('main');
  };

  // –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥
  useEffect(() => {
    (window as any).handleGoBack = goBack;
  }, []);

  // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ô –°–ë–†–û–° –ü–†–ò –ö–ê–ñ–î–û–ú –†–ï–ù–î–ï–†–ï
  useEffect(() => {
    forceScrollReset();
  }, [currentPage, pageRenderKey, forceScrollReset]);

  // –ë–õ–û–ö–ò–†–û–í–ö–ê –°–ö–†–û–õ–õ–ê –í–û –í–†–ï–ú–Ø –ù–ê–í–ò–ì–ê–¶–ò–ò
  useEffect(() => {
    if (isNavigating) {
      const preventScroll = (e: Event) => {
        e.preventDefault();
        e.stopPropagation();
        forceScrollReset();
      };

      // –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è —Å–∫—Ä–æ–ª–ª–∞
      window.addEventListener('scroll', preventScroll, { passive: false });
      document.addEventListener('scroll', preventScroll, { passive: false });
      window.addEventListener('wheel', preventScroll, { passive: false });
      window.addEventListener('touchmove', preventScroll, { passive: false });

      return () => {
        window.removeEventListener('scroll', preventScroll);
        document.removeEventListener('scroll', preventScroll);
        window.removeEventListener('wheel', preventScroll);
        window.removeEventListener('touchmove', preventScroll);
      };
    }
  }, [isNavigating, forceScrollReset]);

  // –†–µ–Ω–¥–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü
  const renderPage = () => {
    switch (currentPage) {
      case 'main':
        return (
          <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 relative overflow-hidden">
            {/* Enhanced Animated Background */}
            <div className="absolute inset-0 overflow-hidden">
              <div className="absolute -top-40 -right-40 w-80 h-80 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob"></div>
              <div className="absolute -bottom-40 -left-40 w-80 h-80 bg-gradient-to-br from-blue-500 to-cyan-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-2000"></div>
              <div className="absolute top-40 left-40 w-80 h-80 bg-gradient-to-br from-pink-500 to-red-500 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-4000"></div>
              <div className="absolute top-1/2 right-1/4 w-60 h-60 bg-gradient-to-br from-green-500 to-emerald-500 rounded-full mix-blend-multiply filter blur-xl opacity-15 animate-blob animation-delay-3000"></div>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ */}
            <FullscreenButton />

            <div className="relative z-10 p-4 sm:p-6 lg:p-8">
              {/* Enhanced Header */}
              <div className="text-center mb-8 sm:mb-12 fade-in">
                <div className="inline-flex items-center justify-center w-16 h-16 sm:w-20 sm:h-20 lg:w-24 lg:h-24 bg-gradient-to-br from-purple-400 via-pink-400 to-purple-600 rounded-3xl mb-4 sm:mb-6 shadow-2xl animate-pulse-glow">
                  <span className="text-2xl sm:text-3xl lg:text-4xl">üöÄ</span>
                </div>
                <h1 className="text-3xl sm:text-5xl lg:text-6xl font-bold text-white mb-2 sm:mb-4 drop-shadow-2xl bg-gradient-to-r from-white via-purple-200 to-pink-200 bg-clip-text text-transparent">
                  Telegram Mini App
                </h1>
                <p className="text-lg sm:text-xl lg:text-2xl text-white/80 drop-shadow-lg max-w-3xl mx-auto leading-relaxed">
                  –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∫–∞–Ω–∞–ª–æ–≤ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
                </p>
              </div>

              {/* Enhanced Main Menu Grid */}
              <div className="max-w-6xl mx-auto">
                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 sm:gap-6 lg:gap-8">
                  {/* Analytics Card */}
                  <div 
                    onClick={() => navigateTo('analytics')}
                    className="group relative overflow-hidden bg-white/5 backdrop-blur-xl rounded-3xl p-6 border border-white/10 hover:border-white/30 transition-all duration-500 transform hover:scale-105 hover:shadow-2xl cursor-pointer hover:bg-white/10"
                  >
                    <div className="absolute inset-0 bg-gradient-to-br from-blue-500/20 to-purple-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                    <div className="relative z-10">
                      <div className="flex items-center justify-between mb-4">
                        <div className="w-12 h-12 sm:w-14 sm:h-14 bg-gradient-to-br from-blue-400 to-blue-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300">
                          <span className="text-xl sm:text-2xl">üìä</span>
                        </div>
                        <div className="w-8 h-8 sm:w-10 sm:h-10 bg-white/10 rounded-xl flex items-center justify-center group-hover:bg-white/20 transition-all duration-300">
                          <svg className="w-4 h-4 sm:w-5 sm:h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                          </svg>
                        </div>
                      </div>
                      <h3 className="text-lg sm:text-xl font-bold text-white mb-2 group-hover:text-purple-200 transition-colors duration-300">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–æ–≤</h3>
                      <p className="text-white/70 text-sm sm:text-base leading-relaxed">
                        –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤–∞—à–∏—Ö –∫–∞–Ω–∞–ª–æ–≤
                      </p>
                    </div>
                  </div>

                  {/* Showcase Card */}
                  <div 
                    onClick={() => navigateTo('showcase')}
                    className="group relative overflow-hidden bg-white/5 backdrop-blur-xl rounded-3xl p-6 border border-white/10 hover:border-white/30 transition-all duration-500 transform hover:scale-105 hover:shadow-2xl cursor-pointer hover:bg-white/10"
                  >
                    <div className="absolute inset-0 bg-gradient-to-br from-green-500/20 to-teal-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                    <div className="relative z-10">
                      <div className="flex items-center justify-between mb-4">
                        <div className="w-12 h-12 sm:w-14 sm:h-14 bg-gradient-to-br from-green-400 to-green-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300">
                          <span className="text-xl sm:text-2xl">üéØ</span>
                        </div>
                        <div className="w-8 h-8 sm:w-10 sm:h-10 bg-white/10 rounded-xl flex items-center justify-center group-hover:bg-white/20 transition-all duration-300">
                          <svg className="w-4 h-4 sm:w-5 sm:h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                          </svg>
                        </div>
                      </div>
                      <h3 className="text-lg sm:text-xl font-bold text-white mb-2 group-hover:text-green-200 transition-colors duration-300">–í–∏—Ç—Ä–∏–Ω–∞ –∫–µ–π—Å–æ–≤</h3>
                      <p className="text-white/70 text-sm sm:text-base leading-relaxed">
                        –ü—Ä–∏–º–µ—Ä—ã —É—Å–ø–µ—à–Ω—ã—Ö –∫–µ–π—Å–æ–≤ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞–±–æ—Ç—ã
                      </p>
                    </div>
                  </div>

                  {/* Demo Chat Card */}
                  <div 
                    onClick={() => navigateTo('demo-chat')}
                    className="group relative overflow-hidden bg-white/5 backdrop-blur-xl rounded-3xl p-6 border border-white/10 hover:border-white/30 transition-all duration-500 transform hover:scale-105 hover:shadow-2xl cursor-pointer hover:bg-white/10"
                  >
                    <div className="absolute inset-0 bg-gradient-to-br from-orange-500/20 to-red-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                    <div className="relative z-10">
                      <div className="flex items-center justify-between mb-4">
                        <div className="w-12 h-12 sm:w-14 sm:h-14 bg-gradient-to-br from-orange-400 to-orange-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300">
                          <span className="text-xl sm:text-2xl">üí¨</span>
                        </div>
                        <div className="w-8 h-8 sm:w-10 sm:h-10 bg-white/10 rounded-xl flex items-center justify-center group-hover:bg-white/20 transition-all duration-300">
                          <svg className="w-4 h-4 sm:w-5 sm:h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                          </svg>
                        </div>
                      </div>
                      <h3 className="text-lg sm:text-xl font-bold text-white mb-2 group-hover:text-orange-200 transition-colors duration-300">–î–µ–º–æ —á–∞—Ç</h3>
                      <p className="text-white/70 text-sm sm:text-base leading-relaxed">
                        –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç —Å –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–æ–º
                      </p>
                    </div>
                  </div>

                  {/* User Profile Card */}
                  <div 
                    onClick={() => navigateTo('user-profile')}
                    className="group relative overflow-hidden bg-white/5 backdrop-blur-xl rounded-3xl p-6 border border-white/10 hover:border-white/30 transition-all duration-500 transform hover:scale-105 hover:shadow-2xl cursor-pointer hover:bg-white/10"
                  >
                    <div className="absolute inset-0 bg-gradient-to-br from-purple-500/20 to-pink-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                    <div className="relative z-10">
                      <div className="flex items-center justify-between mb-4">
                        <div className="w-12 h-12 sm:w-14 sm:h-14 bg-gradient-to-br from-purple-400 to-purple-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300">
                          <span className="text-xl sm:text-2xl">üë§</span>
                        </div>
                        <div className="w-8 h-8 sm:w-10 sm:h-10 bg-white/10 rounded-xl flex items-center justify-center group-hover:bg-white/20 transition-all duration-300">
                          <svg className="w-4 h-4 sm:w-5 sm:h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                          </svg>
                        </div>
                      </div>
                      <h3 className="text-lg sm:text-xl font-bold text-white mb-2 group-hover:text-purple-200 transition-colors duration-300">–ü—Ä–æ—Ñ–∏–ª—å</h3>
                      <p className="text-white/70 text-sm sm:text-base leading-relaxed">
                        –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                      </p>
                    </div>
                  </div>

                  {/* Analytics Feedback Card */}
                  <div 
                    onClick={() => navigateTo('feedback')}
                    className="group relative overflow-hidden bg-white/5 backdrop-blur-xl rounded-3xl p-6 border border-white/10 hover:border-white/30 transition-all duration-500 transform hover:scale-105 hover:shadow-2xl cursor-pointer hover:bg-white/10"
                  >
                    <div className="absolute inset-0 bg-gradient-to-br from-cyan-500/20 to-blue-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                    <div className="relative z-10">
                      <div className="flex items-center justify-between mb-4">
                        <div className="w-12 h-12 sm:w-14 sm:h-14 bg-gradient-to-br from-cyan-400 to-cyan-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300">
                          <span className="text-xl sm:text-2xl">üìà</span>
                        </div>
                        <div className="w-8 h-8 sm:w-10 sm:h-10 bg-white/10 rounded-xl flex items-center justify-center group-hover:bg-white/20 transition-all duration-300">
                          <svg className="w-4 h-4 sm:w-5 sm:h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                          </svg>
                        </div>
                      </div>
                      <h3 className="text-lg sm:text-xl font-bold text-white mb-2 group-hover:text-cyan-200 transition-colors duration-300">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ—Ç–∑—ã–≤–æ–≤</h3>
                      <p className="text-white/70 text-sm sm:text-base leading-relaxed">
                        –ê–Ω–∞–ª–∏–∑ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∏ –æ—Ç–∑—ã–≤–æ–≤
                      </p>
                    </div>
                  </div>

                  {/* Post Analytics Card */}
                  <div 
                    onClick={() => navigateTo('post-analytics')}
                    className="group relative overflow-hidden bg-white/5 backdrop-blur-xl rounded-3xl p-6 border border-white/10 hover:border-white/30 transition-all duration-500 transform hover:scale-105 hover:shadow-2xl cursor-pointer hover:bg-white/10"
                  >
                    <div className="absolute inset-0 bg-gradient-to-br from-indigo-500/20 to-purple-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                    <div className="relative z-10">
                      <div className="flex items-center justify-between mb-4">
                        <div className="w-12 h-12 sm:w-14 sm:h-14 bg-gradient-to-br from-indigo-400 to-indigo-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300">
                          <span className="text-xl sm:text-2xl">üìù</span>
                        </div>
                        <div className="w-8 h-8 sm:w-10 sm:h-10 bg-white/10 rounded-xl flex items-center justify-center group-hover:bg-white/20 transition-all duration-300">
                          <svg className="w-4 h-4 sm:w-5 sm:h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                          </svg>
                        </div>
                      </div>
                      <h3 className="text-lg sm:text-xl font-bold text-white mb-2 group-hover:text-indigo-200 transition-colors duration-300">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ—Å—Ç–æ–≤</h3>
                      <p className="text-white/70 text-sm sm:text-base leading-relaxed">
                        –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö –ø–æ—Å—Ç–æ–≤
                      </p>
                    </div>
                  </div>

                  {/* Telegram Integration Card */}
                  <div 
                    onClick={() => navigateTo('telegram-integration')}
                    className="group relative overflow-hidden bg-white/5 backdrop-blur-xl rounded-3xl p-6 border border-white/10 hover:border-white/30 transition-all duration-500 transform hover:scale-105 hover:shadow-2xl cursor-pointer hover:bg-white/10"
                  >
                    <div className="absolute inset-0 bg-gradient-to-br from-teal-500/20 to-blue-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                    <div className="relative z-10">
                      <div className="flex items-center justify-between mb-4">
                        <div className="w-12 h-12 sm:w-14 sm:h-14 bg-gradient-to-br from-teal-400 to-teal-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300">
                          <span className="text-xl sm:text-2xl">‚öôÔ∏è</span>
                        </div>
                        <div className="w-8 h-8 sm:w-10 sm:h-10 bg-white/10 rounded-xl flex items-center justify-center group-hover:bg-white/20 transition-all duration-300">
                          <svg className="w-4 h-4 sm:w-5 sm:h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                          </svg>
                        </div>
                      </div>
                      <h3 className="text-lg sm:text-xl font-bold text-white mb-2 group-hover:text-teal-200 transition-colors duration-300">–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram</h3>
                      <p className="text-white/70 text-sm sm:text-base leading-relaxed">
                        –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –∏–∑ Telegram
                      </p>
                    </div>
                  </div>

                  {/* Post Tracking Card */}
                  <div 
                    onClick={() => navigateTo('post-tracking')}
                    className="group relative overflow-hidden bg-white/5 backdrop-blur-xl rounded-3xl p-6 border border-white/10 hover:border-white/30 transition-all duration-500 transform hover:scale-105 hover:shadow-2xl cursor-pointer hover:bg-white/10"
                  >
                    <div className="absolute inset-0 bg-gradient-to-br from-red-500/20 to-orange-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                    <div className="relative z-10">
                      <div className="flex items-center justify-between mb-4">
                        <div className="w-12 h-12 sm:w-14 sm:h-14 bg-gradient-to-br from-red-400 to-red-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300">
                          <span className="text-xl sm:text-2xl">üîó</span>
                        </div>
                        <div className="w-8 h-8 sm:w-10 sm:h-10 bg-white/10 rounded-xl flex items-center justify-center group-hover:bg-white/20 transition-all duration-300">
                          <svg className="w-4 h-4 sm:w-5 sm:h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                          </svg>
                        </div>
                      </div>
                      <h3 className="text-lg sm:text-xl font-bold text-white mb-2 group-hover:text-red-200 transition-colors duration-300">–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤</h3>
                      <p className="text-white/70 text-sm sm:text-base leading-relaxed">
                        –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –≤–∞—à–∏—Ö –ø–æ—Å—Ç–æ–≤
                      </p>
                    </div>
                  </div>

                  {/* Post Builder Card */}
                  <div 
                    onClick={() => navigateTo('post-builder')}
                    className="group relative overflow-hidden bg-white/5 backdrop-blur-xl rounded-3xl p-6 border border-white/10 hover:border-white/30 transition-all duration-500 transform hover:scale-105 hover:shadow-2xl cursor-pointer hover:bg-white/10"
                  >
                    <div className="absolute inset-0 bg-gradient-to-br from-purple-500/20 to-pink-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                    <div className="relative z-10">
                      <div className="flex items-center justify-between mb-4">
                        <div className="w-12 h-12 sm:w-14 sm:h-14 bg-gradient-to-br from-purple-400 to-purple-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300">
                          <span className="text-xl sm:text-2xl">üìù</span>
                        </div>
                        <div className="w-8 h-8 sm:w-10 sm:h-10 bg-white/10 rounded-xl flex items-center justify-center group-hover:bg-white/20 transition-all duration-300">
                          <svg className="w-4 h-4 sm:w-5 sm:h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                          </svg>
                        </div>
                      </div>
                      <h3 className="text-lg sm:text-xl font-bold text-white mb-2 group-hover:text-purple-200 transition-colors duration-300">–ü–æ—Å—Ç + –∫–Ω–æ–ø–∫–∞</h3>
                      <p className="text-white/70 text-sm sm:text-base leading-relaxed">
                        –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
                      </p>
                    </div>
                  </div>

                  {/* Test Page Card */}
                  <div 
                    onClick={() => navigateTo('test')}
                    className="group relative overflow-hidden bg-white/5 backdrop-blur-xl rounded-3xl p-6 border border-white/10 hover:border-white/30 transition-all duration-500 transform hover:scale-105 hover:shadow-2xl cursor-pointer hover:bg-white/10"
                  >
                    <div className="absolute inset-0 bg-gradient-to-br from-yellow-500/20 to-orange-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                    <div className="relative z-10">
                      <div className="flex items-center justify-between mb-4">
                        <div className="w-12 h-12 sm:w-14 sm:h-14 bg-gradient-to-br from-yellow-400 to-yellow-600 rounded-2xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300">
                          <span className="text-xl sm:text-2xl">üß™</span>
                        </div>
                        <div className="w-8 h-8 sm:w-10 sm:h-10 bg-white/10 rounded-xl flex items-center justify-center group-hover:bg-white/20 transition-all duration-300">
                          <svg className="w-4 h-4 sm:w-5 sm:h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                          </svg>
                        </div>
                      </div>
                      <h3 className="text-lg sm:text-xl font-bold text-white mb-2 group-hover:text-yellow-200 transition-colors duration-300">–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</h3>
                      <p className="text-white/70 text-sm sm:text-base leading-relaxed">
                        –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
                      </p>
                    </div>
                  </div>
                </div>
              </div>

              {/* Enhanced Quick Stats */}
              <div className="max-w-4xl mx-auto mt-8 sm:mt-12">
                <div className="glass-card p-6 sm:p-8 rounded-3xl">
                  <h2 className="text-xl sm:text-2xl font-bold text-white mb-6 text-center">–ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
                  <div className="grid grid-cols-3 gap-4 sm:gap-6">
                    <div className="text-center group">
                      <div className="text-2xl sm:text-3xl font-bold text-purple-400 group-hover:text-purple-300 transition-colors duration-300">2.4K</div>
                      <div className="text-sm sm:text-base text-white/70">–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</div>
                    </div>
                    <div className="text-center group">
                      <div className="text-2xl sm:text-3xl font-bold text-green-400 group-hover:text-green-300 transition-colors duration-300">98%</div>
                      <div className="text-sm sm:text-base text-white/70">–í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å</div>
                    </div>
                    <div className="text-center group">
                      <div className="text-2xl sm:text-3xl font-bold text-blue-400 group-hover:text-blue-300 transition-colors duration-300">1.2M</div>
                      <div className="text-sm sm:text-base text-white/70">–ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        );

      case 'analytics':
        return (
          <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900">
            <BackButton onClick={goBack} />
            <FullscreenButton />
            <ChannelAnalytics onBack={goBack} />
          </div>
        );

      case 'showcase':
        return (
          <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900">
            <BackButton onClick={goBack} />
            <FullscreenButton />
            <div className="relative z-10 p-4 sm:p-6">
              <div className="max-w-4xl mx-auto">
                <h1 className="text-3xl font-bold text-white mb-6 text-center">üéØ –í–∏—Ç—Ä–∏–Ω–∞ –∫–µ–π—Å–æ–≤</h1>
                <div className="glass-card p-6">
                  <h2 className="text-xl font-bold text-white mb-4">–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</h2>
                  <p className="text-white/70 mb-4">–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç, –∑–Ω–∞—á–∏—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!</p>
                  <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                    <div className="bg-white/10 rounded-lg p-4">
                      <h3 className="text-lg font-bold text-white mb-2">–ö–µ–π—Å 1</h3>
                      <p className="text-white/70 text-sm">–û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∫–µ–π—Å–∞</p>
                    </div>
                    <div className="bg-white/10 rounded-lg p-4">
                      <h3 className="text-lg font-bold text-white mb-2">–ö–µ–π—Å 2</h3>
                      <p className="text-white/70 text-sm">–û–ø–∏—Å–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –∫–µ–π—Å–∞</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        );

      case 'demo-chat':
        return (
          <div>
            <BackButton onClick={goBack} />
            <FullscreenButton />
            <DemoChat />
          </div>
        );

      case 'referral':
        return (
          <div>
            <BackButton onClick={goBack} />
            <FullscreenButton />
            <ReferralSystem />
          </div>
        );

      case 'user-profile':
        return (
          <div>
            <BackButton onClick={goBack} />
            <FullscreenButton />
            <UserProfile />
          </div>
        );

      case 'feedback':
        return (
          <div>
            <BackButton onClick={goBack} />
            <FullscreenButton />
            <AnalyticsFeedback />
          </div>
        );

      case 'post-analytics':
        return (
          <div>
            <BackButton onClick={goBack} />
            <FullscreenButton />
            <PostAnalytics />
          </div>
        );

      case 'telegram-integration':
        return (
          <div>
            <BackButton onClick={goBack} />
            <FullscreenButton />
            <TelegramIntegration />
          </div>
        );

      case 'post-tracking':
        return (
          <div>
            <BackButton onClick={goBack} />
            <FullscreenButton />
            <PostTracking />
          </div>
        );

      case 'post-builder':
        return (
          <div>
            <BackButton onClick={goBack} />
            <FullscreenButton />
            <PostBuilder />
          </div>
        );

      case 'test':
        return (
          <div>
            <BackButton onClick={goBack} />
            <FullscreenButton />
            <TestPage />
          </div>
        );

      default:
        return (
          <div>
            <BackButton onClick={goBack} />
            <FullscreenButton />
            <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 flex items-center justify-center">
              <div className="text-center text-white">
                <h1 className="text-2xl font-bold mb-4">–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h1>
                <button 
                  onClick={() => navigateTo('main')}
                  className="bg-purple-600 hover:bg-purple-700 px-6 py-3 rounded-lg transition-colors"
                >
                  –ù–∞ –≥–ª–∞–≤–Ω—É—é
                </button>
              </div>
            </div>
          </div>
        );
    }
  };

  // –ü–û–õ–ù–ê–Ø –ü–ï–†–ï–ó–ê–ì–†–£–ó–ö–ê –í–°–ï–ì–û –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
  if (isNavigating) {
    return (
      <div className="App" key={`loading-${pageRenderKey}`}>
        <div style={{ 
          display: 'flex', 
          justifyContent: 'center', 
          alignItems: 'center', 
          height: '100vh',
          fontSize: '18px',
          color: '#007AFF'
        }}>
          –ó–∞–≥—Ä—É–∑–∫–∞...
        </div>
      </div>
    );
  }

  return (
    <div 
      className="App" 
      key={`page-${currentPage}-${pageRenderKey}`}
      style={{ transform: 'translateY(0)', scrollBehavior: 'auto' }}
    >
      {renderPage()}
    </div>
  );
}

export default App; 