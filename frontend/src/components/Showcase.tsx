import React, { useState } from 'react';

interface Case {
  id: number;
  title: string;
  description: string;
  image: string;
  category: string;
  features: string[];
  demoUrl?: string;
}

const cases: Case[] = [
  {
    id: 1,
    title: "E-commerce Bot",
    description: "–£–º–Ω—ã–π –±–æ—Ç –¥–ª—è –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ä–∑–∏–Ω–æ–π –∏ –æ–ø–ª–∞—Ç–æ–π",
    image: "https://via.placeholder.com/300x200/4F46E5/FFFFFF?text=E-commerce+Bot",
    category: "E-commerce",
    features: ["–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤", "–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫", "–û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞", "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤"],
    demoUrl: "/demo/ecommerce"
  },
  {
    id: 2,
    title: "Support Assistant",
    description: "AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏ –∏ —ç—Å–∫–∞–ª–∞—Ü–∏–µ–π",
    image: "https://via.placeholder.com/300x200/10B981/FFFFFF?text=Support+Assistant",
    category: "Support",
    features: ["–ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã", "–≠—Å–∫–∞–ª–∞—Ü–∏—è", "–¢–∏–∫–µ—Ç—ã", "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"],
    demoUrl: "/demo/support"
  },
  {
    id: 3,
    title: "Fitness Coach",
    description: "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä —Å –ø–ª–∞–Ω–∞–º–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫, –ø–∏—Ç–∞–Ω–∏–µ–º –∏ –º–æ—Ç–∏–≤–∞—Ü–∏–µ–π",
    image: "https://via.placeholder.com/300x200/F59E0B/FFFFFF?text=Fitness+Coach",
    category: "Health",
    features: ["–ü–ª–∞–Ω—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫", "–ü–∏—Ç–∞–Ω–∏–µ", "–ü—Ä–æ–≥—Ä–µ—Å—Å", "–ú–æ—Ç–∏–≤–∞—Ü–∏—è"],
    demoUrl: "/demo/fitness"
  },
  {
    id: 4,
    title: "Language Tutor",
    description: "–†–µ–ø–µ—Ç–∏—Ç–æ—Ä –ø–æ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–º —è–∑—ã–∫–∞–º —Å —É—Ä–æ–∫–∞–º–∏, —Ç–µ—Å—Ç–∞–º–∏ –∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π",
    image: "https://via.placeholder.com/300x200/EF4444/FFFFFF?text=Language+Tutor",
    category: "Education",
    features: ["–£—Ä–æ–∫–∏", "–¢–µ—Å—Ç—ã", "–†–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞", "–ü—Ä–æ–≥—Ä–µ—Å—Å"],
    demoUrl: "/demo/language"
  }
];

const Showcase: React.FC = () => {
  const [selectedCategory, setSelectedCategory] = useState<string>('all');
  const [selectedCase, setSelectedCase] = useState<Case | null>(null);

  const categories = ['all', ...Array.from(new Set(cases.map(c => c.category)))];
  const filteredCases = selectedCategory === 'all' 
    ? cases 
    : cases.filter(c => c.category === selectedCategory);

  const handleTryDemo = (caseItem: Case) => {
    setSelectedCase(caseItem);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –¥–µ–º–æ-—á–∞—Ç –∏–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º—É –±–æ—Ç—É
    if (window.Telegram?.WebApp) {
      window.Telegram.WebApp.sendData(JSON.stringify({
        action: 'open_demo',
        caseId: caseItem.id,
        caseTitle: caseItem.title
      }));
    }
  };

  const handleBack = () => {
    if (selectedCase) {
      setSelectedCase(null);
    } else {
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
      if (window.Telegram?.WebApp) {
        window.Telegram.WebApp.BackButton.onClick(() => {
          // –≠–º—É–ª–∏—Ä—É–µ–º –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
          window.location.reload();
        });
      }
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4">
      <div className="max-w-6xl mx-auto">
        {/* Header —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥ */}
        <div className="mb-8">
          {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∑–∞–º–µ—Ç–Ω–∞—è */}
          <div className="mb-6">
            <button
              onClick={handleBack}
              className="w-full bg-red-600 text-white py-8 px-10 rounded-xl shadow-2xl hover:bg-red-700 transition-all transform hover:scale-105 font-bold text-3xl border-4 border-white"
            >
              üîô –ù–ê–ñ–ú–ò –ù–ê–ó–ê–î –ö –ì–õ–ê–í–ù–û–ô –°–¢–†–ê–ù–ò–¶–ï üîô
            </button>
          </div>
          
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div className="text-center">
            <h1 className="text-4xl font-bold text-gray-800 mb-4">–í–∏—Ç—Ä–∏–Ω–∞ —á–∞—Ç-–±–æ—Ç–æ–≤</h1>
            <p className="text-lg text-gray-600">–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –∫–µ–π—Å –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–µ–º–æ</p>
          </div>
        </div>

        {/* Categories */}
        <div className="flex flex-wrap justify-center gap-2 mb-8">
          {categories.map(category => (
            <button
              key={category}
              onClick={() => setSelectedCategory(category)}
              className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${
                selectedCategory === category
                  ? 'bg-blue-600 text-white'
                  : 'bg-white text-gray-700 hover:bg-gray-50'
              }`}
            >
              {category === 'all' ? '–í—Å–µ' : category}
            </button>
          ))}
        </div>

        {/* Cases Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredCases.map(caseItem => (
            <div key={caseItem.id} className="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow">
              <img 
                src={caseItem.image} 
                alt={caseItem.title}
                className="w-full h-48 object-cover"
              />
              <div className="p-6">
                <div className="flex items-center justify-between mb-2">
                  <span className="text-sm font-medium text-blue-600 bg-blue-100 px-2 py-1 rounded-full">
                    {caseItem.category}
                  </span>
                </div>
                <h3 className="text-xl font-bold text-gray-800 mb-2">{caseItem.title}</h3>
                <p className="text-gray-600 mb-4">{caseItem.description}</p>
                
                <div className="mb-4">
                  <h4 className="font-semibold text-gray-700 mb-2">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</h4>
                  <ul className="space-y-1">
                    {caseItem.features.map((feature, index) => (
                      <li key={index} className="flex items-center text-sm text-gray-600">
                        <svg className="w-4 h-4 text-green-500 mr-2" fill="currentColor" viewBox="0 0 20 20">
                          <path fillRule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clipRule="evenodd" />
                        </svg>
                        {feature}
                      </li>
                    ))}
                  </ul>
                </div>
                
                <button
                  onClick={() => handleTryDemo(caseItem)}
                  className="w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white py-3 px-4 rounded-lg font-medium hover:from-blue-700 hover:to-purple-700 transition-all transform hover:scale-105"
                >
                  üöÄ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥–µ–º–æ
                </button>
              </div>
            </div>
          ))}
        </div>

        {/* Empty State */}
        {filteredCases.length === 0 && (
          <div className="text-center py-12">
            <div className="text-6xl mb-4">ü§ñ</div>
            <h3 className="text-xl font-semibold text-gray-700 mb-2">–ö–µ–π—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p className="text-gray-500">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é</p>
          </div>
        )}
      </div>
    </div>
  );
};

export default Showcase; 