import React, { useState } from 'react';
import BackButton from './BackButton';
import FullscreenButton from './FullscreenButton';

interface AnalyticsData {
  dailyUsers: number[];
  weeklyGrowth: number;
  totalUsers: number;
  activeUsers: number;
  averageSessionTime: number;
  popularBots: { name: string; usage: number }[];
}

interface Feedback {
  id: string;
  user: string;
  rating: number;
  comment: string;
  date: string;
  category: string;
}

const AnalyticsFeedback: React.FC = () => {
  const [activeTab, setActiveTab] = useState<'analytics' | 'feedback'>('analytics');
  const [showFeedbackForm, setShowFeedbackForm] = useState(false);
  const [feedbackForm, setFeedbackForm] = useState({
    rating: 5,
    comment: '',
    category: 'general'
  });

  const analytics: AnalyticsData = {
    dailyUsers: [120, 145, 132, 167, 189, 201, 234],
    weeklyGrowth: 15.2,
    totalUsers: 15420,
    activeUsers: 3240,
    averageSessionTime: 8.5,
    popularBots: [
      { name: 'E-commerce Bot', usage: 45 },
      { name: 'Support Assistant', usage: 38 },
      { name: 'Fitness Coach', usage: 32 },
      { name: 'Language Tutor', usage: 28 }
    ]
  };

  const feedbacks: Feedback[] = [
    {
      id: '1',
      user: '–ê–ª–µ–∫—Å–µ–π –ö.',
      rating: 5,
      comment: '–û—Ç–ª–∏—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å! –ë–æ—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –±—ã—Å—Ç—Ä–æ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ. –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è E-commerce Bot.',
      date: '2024-02-15',
      category: 'general'
    },
    {
      id: '2',
      user: '–ú–∞—Ä–∏—è –°.',
      rating: 4,
      comment: '–•–æ—Ä–æ—à–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –Ω–æ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –±–æ–ª—å—à–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.',
      date: '2024-02-14',
      category: 'suggestion'
    },
    {
      id: '3',
      user: '–î–º–∏—Ç—Ä–∏–π –í.',
      rating: 5,
      comment: '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ! –£–∂–µ –∑–∞—Ä–∞–±–æ—Ç–∞–ª 2000‚ÇΩ.',
      date: '2024-02-13',
      category: 'referral'
    },
    {
      id: '4',
      user: '–ï–ª–µ–Ω–∞ –ü.',
      rating: 5,
      comment: '–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—á–µ–Ω—å —É–¥–æ–±–Ω—ã–π, –≤—Å–µ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω–æ. –†–µ–∫–æ–º–µ–Ω–¥—É—é!',
      date: '2024-02-12',
      category: 'general'
    }
  ];

  const handleSubmitFeedback = () => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∑—ã–≤–∞ –Ω–∞ backend
    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∑—ã–≤–∞:', feedbackForm);
    setShowFeedbackForm(false);
    setFeedbackForm({ rating: 5, comment: '', category: 'general' });
  };

  const getRatingStars = (rating: number) => {
    return '‚òÖ'.repeat(rating) + '‚òÜ'.repeat(5 - rating);
  };

  const getCategoryColor = (category: string) => {
    switch (category) {
      case 'general': return 'bg-blue-100 text-blue-800';
      case 'suggestion': return 'bg-yellow-100 text-yellow-800';
      case 'referral': return 'bg-green-100 text-green-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 relative">
      {/* –ö—Ä–∞—Å–∏–≤–∞—è –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" */}
      <BackButton onClick={() => {
        if ((window as any).handleGoBack) {
          (window as any).handleGoBack();
        } else {
          window.location.reload();
        }
      }} />
      
      {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ */}
      <FullscreenButton />
      
      <div className="max-w-7xl mx-auto p-4 sm:p-6">
        {/* Header */}
        <div className="text-center mb-8 fade-in">
          <div className="inline-flex items-center justify-center w-16 h-16 sm:w-20 sm:h-20 bg-gradient-to-br from-indigo-400 to-cyan-600 rounded-2xl mb-4 shadow-2xl">
            <span className="text-2xl sm:text-3xl">üìä</span>
          </div>
          <h1 className="text-3xl sm:text-5xl font-bold text-white mb-2 sm:mb-4 drop-shadow-2xl">
            –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ & –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
          </h1>
          <p className="text-lg sm:text-xl text-white/80 drop-shadow-lg max-w-2xl mx-auto">
            –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
          </p>
        </div>

        {/* Tabs */}
        <div className="mb-8">
          <div className="flex overflow-x-auto scrollbar-hide gap-2 pb-4">
            {[
              { id: 'analytics', label: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞', icon: 'üìà' },
              { id: 'feedback', label: '–û—Ç–∑—ã–≤—ã', icon: 'üí¨' }
            ].map(tab => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id as any)}
                className={`px-6 py-3 rounded-xl font-medium transition-all duration-300 whitespace-nowrap flex-shrink-0 flex items-center space-x-2 ${
                  activeTab === tab.id
                    ? 'bg-gradient-to-r from-purple-500 to-pink-500 text-white shadow-lg shadow-purple-500/25'
                    : 'bg-white/10 backdrop-blur-sm text-white/70 hover:bg-white/20 hover:text-white border border-white/20'
                }`}
              >
                <span>{tab.icon}</span>
                <span>{tab.label}</span>
              </button>
            ))}
          </div>
        </div>

        {/* Tab Content */}
        <div className="space-y-6">
          {activeTab === 'analytics' && (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              <div className="bg-white/10 backdrop-blur-xl rounded-2xl p-6 border border-white/20">
                <div className="flex items-center justify-between mb-4">
                  <div className="w-12 h-12 bg-gradient-to-br from-blue-400 to-blue-600 rounded-xl flex items-center justify-center">
                    <span className="text-xl">üë•</span>
                  </div>
                </div>
                <h3 className="text-2xl font-bold text-white mb-1">{analytics.totalUsers.toLocaleString()}</h3>
                <p className="text-white/60">–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
              </div>
              
              <div className="bg-white/10 backdrop-blur-xl rounded-2xl p-6 border border-white/20">
                <div className="flex items-center justify-between mb-4">
                  <div className="w-12 h-12 bg-gradient-to-br from-green-400 to-green-600 rounded-xl flex items-center justify-center">
                    <span className="text-xl">üìà</span>
                  </div>
                </div>
                <h3 className="text-2xl font-bold text-green-400 mb-1">+{analytics.weeklyGrowth}%</h3>
                <p className="text-white/60">–†–æ—Å—Ç –∑–∞ –Ω–µ–¥–µ–ª—é</p>
              </div>
              
              <div className="bg-white/10 backdrop-blur-xl rounded-2xl p-6 border border-white/20">
                <div className="flex items-center justify-between mb-4">
                  <div className="w-12 h-12 bg-gradient-to-br from-purple-400 to-purple-600 rounded-xl flex items-center justify-center">
                    <span className="text-xl">‚è±Ô∏è</span>
                  </div>
                </div>
                <h3 className="text-2xl font-bold text-purple-400 mb-1">{analytics.averageSessionTime}–º</h3>
                <p className="text-white/60">–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —Å–µ—Å—Å–∏–∏</p>
              </div>
              
              <div className="bg-white/10 backdrop-blur-xl rounded-2xl p-6 border border-white/20">
                <div className="flex items-center justify-between mb-4">
                  <div className="w-12 h-12 bg-gradient-to-br from-orange-400 to-orange-600 rounded-xl flex items-center justify-center">
                    <span className="text-xl">üî•</span>
                  </div>
                </div>
                <h3 className="text-2xl font-bold text-orange-400 mb-1">{analytics.activeUsers.toLocaleString()}</h3>
                <p className="text-white/60">–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
              </div>
            </div>
          )}

          {activeTab === 'feedback' && (
            <div className="space-y-6">
              <div className="flex justify-between items-center">
                <h2 className="text-2xl font-bold text-white">–û—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h2>
                <button
                  onClick={() => setShowFeedbackForm(true)}
                  className="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-6 py-3 rounded-xl font-semibold hover:from-purple-600 hover:to-pink-600 transition-all duration-300 transform hover:scale-105"
                >
                  ‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
                </button>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {feedbacks.map((feedback) => (
                  <div key={feedback.id} className="bg-white/10 backdrop-blur-xl rounded-2xl p-6 border border-white/20">
                    <div className="flex justify-between items-start mb-4">
                      <div>
                        <h3 className="text-lg font-semibold text-white">{feedback.user}</h3>
                        <p className="text-white/60 text-sm">{feedback.date}</p>
                      </div>
                      <span className={`px-3 py-1 rounded-full text-xs font-medium ${getCategoryColor(feedback.category)}`}>
                        {feedback.category}
                      </span>
                    </div>
                    <div className="mb-3">
                      <span className="text-yellow-400 text-lg">{getRatingStars(feedback.rating)}</span>
                    </div>
                    <p className="text-white/80 leading-relaxed">{feedback.comment}</p>
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default AnalyticsFeedback; 