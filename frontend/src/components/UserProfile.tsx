import React, { useState, useEffect } from 'react';
import BackButton from './BackButton';
import FullscreenButton from './FullscreenButton'; // Added import for FullscreenButton

interface UserProfile {
  id: string;
  name: string;
  username: string;
  avatar: string;
  joinDate: string;
  level: number;
  experience: number;
  nextLevelExp: number;
  achievements: Achievement[];
  stats: UserStats;
}

interface Achievement {
  id: string;
  title: string;
  description: string;
  icon: string;
  unlocked: boolean;
  unlockedDate?: string;
}

interface UserStats {
  totalSessions: number;
  totalMessages: number;
  favoriteBots: number;
  referralEarnings: number;
  daysActive: number;
}

const UserProfile: React.FC = () => {
  const [profile, setProfile] = useState<UserProfile>({
    id: '123456789',
    name: '–î–µ–º–æ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    username: '@demo_user',
    avatar: 'https://via.placeholder.com/100x100/4F46E5/FFFFFF?text=DU',
    joinDate: '2024-01-15',
    level: 7,
    experience: 1250,
    nextLevelExp: 2000,
    achievements: [
      {
        id: '1',
        title: '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏',
        description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø–µ—Ä–≤—É—é —Å–µ—Å—Å–∏—é —Å –±–æ—Ç–æ–º',
        icon: 'üéØ',
        unlocked: true,
        unlockedDate: '2024-01-15'
      },
      {
        id: '2',
        title: '–û–±—â–∏—Ç–µ–ª—å–Ω—ã–π',
        description: '–û—Ç–ø—Ä–∞–≤—å—Ç–µ 100 —Å–æ–æ–±—â–µ–Ω–∏–π',
        icon: 'üí¨',
        unlocked: true,
        unlockedDate: '2024-01-20'
      },
      {
        id: '3',
        title: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å',
        description: '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ 5 —Ä–∞–∑–Ω—ã—Ö –±–æ—Ç–æ–≤',
        icon: 'üîç',
        unlocked: true,
        unlockedDate: '2024-02-01'
      },
      {
        id: '4',
        title: '–†–µ—Ñ–µ—Ä–∞–ª',
        description: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –¥—Ä—É–≥–∞',
        icon: 'üë•',
        unlocked: true,
        unlockedDate: '2024-02-10'
      },
      {
        id: '5',
        title: '–≠–∫—Å–ø–µ—Ä—Ç',
        description: '–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ 10 —É—Ä–æ–≤–Ω—è',
        icon: 'üèÜ',
        unlocked: false
      },
      {
        id: '6',
        title: '–ú–∞—Å—Ç–µ—Ä',
        description: '–û—Ç–ø—Ä–∞–≤—å—Ç–µ 1000 —Å–æ–æ–±—â–µ–Ω–∏–π',
        icon: 'üëë',
        unlocked: false
      }
    ],
    stats: {
      totalSessions: 45,
      totalMessages: 342,
      favoriteBots: 3,
      referralEarnings: 2400,
      daysActive: 28
    }
  });

  const [activeTab, setActiveTab] = useState<'profile' | 'achievements' | 'stats'>('profile');

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
  useEffect(() => {
    if (window.Telegram?.WebApp?.initDataUnsafe?.user) {
      const user = window.Telegram.WebApp.initDataUnsafe.user;
      setProfile(prev => ({
        ...prev,
        id: user.id.toString(),
        name: user.first_name + (user.last_name ? ' ' + user.last_name : ''),
        username: user.username ? `@${user.username}` : '–ë–µ–∑ username',
        avatar: user.photo_url || prev.avatar,
        joinDate: new Date().toISOString().split('T')[0] // –°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –¥–∞—Ç–∞ –∫–∞–∫ –ø—Ä–∏–º–µ—Ä
      }));
    }
  }, []);

  const progressPercentage = (profile.experience / profile.nextLevelExp) * 100;

  const getLevelTitle = (level: number) => {
    if (level < 5) return '–ù–æ–≤–∏—á–æ–∫';
    if (level < 10) return '–û–ø—ã—Ç–Ω—ã–π';
    if (level < 15) return '–≠–∫—Å–ø–µ—Ä—Ç';
    return '–ú–∞—Å—Ç–µ—Ä';
  };

  const handleBack = () => {
    if ((window as any).handleGoBack) {
      (window as any).handleGoBack();
    } else {
      window.location.reload();
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-4 relative">
      {/* –ö—Ä–∞—Å–∏–≤–∞—è –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" */}
      <BackButton onClick={handleBack} />
      
      {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ */}
      <FullscreenButton />
      
      <div className="max-w-4xl mx-auto px-2 sm:px-4">
        {/* Header */}
        <div className="text-center mb-6 fade-in">
          <div className="inline-flex items-center justify-center w-16 h-16 sm:w-20 sm:h-20 bg-gradient-to-br from-orange-400 to-red-600 rounded-2xl mb-4 shadow-2xl">
            <span className="text-2xl sm:text-3xl">üë§</span>
          </div>
          <h1 className="text-3xl sm:text-5xl font-bold text-white mb-2 sm:mb-4 drop-shadow-2xl">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h1>
          <p className="text-lg sm:text-xl text-white/80 drop-shadow-lg max-w-2xl mx-auto">–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</p>
        </div>

        {/* Profile Card */}
        <div className="glass-card p-6 mb-6">
          <div className="flex flex-col sm:flex-row items-center space-y-4 sm:space-y-0 sm:space-x-6 mb-6">
            <img
              src={profile.avatar}
              alt={profile.name}
              className="w-20 h-20 sm:w-24 sm:h-24 rounded-full border-4 border-purple-200 flex-shrink-0 shadow-2xl"
            />
            <div className="flex-1 text-center sm:text-left min-w-0">
              <h2 className="text-2xl sm:text-3xl font-bold text-white drop-shadow-md truncate">{profile.name}</h2>
              <p className="text-white/90 drop-shadow-sm truncate text-lg">{profile.username}</p>
              <p className="text-sm text-white/70 drop-shadow-sm">–£—á–∞—Å—Ç–Ω–∏–∫ —Å {new Date(profile.joinDate).toLocaleDateString()}</p>
            </div>
            <div className="text-center sm:text-right flex-shrink-0">
              <div className="text-3xl sm:text-4xl font-bold text-purple-300 drop-shadow-md">–£—Ä–æ–≤–µ–Ω—å {profile.level}</div>
              <div className="text-sm text-white/80 drop-shadow-sm">{getLevelTitle(profile.level)}</div>
            </div>
          </div>

          {/* Experience Bar */}
          <div className="mb-6">
            <div className="flex justify-between text-sm text-white/80 mb-3 drop-shadow-sm">
              <span>–û–ø—ã—Ç: {profile.experience} / {profile.nextLevelExp}</span>
              <span>{Math.round(progressPercentage)}%</span>
            </div>
            <div className="w-full bg-white/20 rounded-full h-4 backdrop-blur-sm">
              <div
                className="bg-gradient-to-r from-purple-400 to-pink-400 h-4 rounded-full transition-all duration-300"
                style={{ width: `${progressPercentage}%` }}
              ></div>
            </div>
          </div>

          {/* Stats Grid */}
          <div className="grid grid-cols-2 gap-4 sm:gap-6">
            <div className="text-center p-4 sm:p-6 bg-white/10 rounded-xl backdrop-blur-sm border border-white/20 hover:bg-white/15 transition-all duration-300">
              <div className="text-2xl sm:text-3xl font-bold text-blue-300 drop-shadow-md">{profile.stats.totalSessions}</div>
              <div className="text-sm text-white/80 drop-shadow-sm">–°–µ—Å—Å–∏–π</div>
            </div>
            <div className="text-center p-4 sm:p-6 bg-white/10 rounded-xl backdrop-blur-sm border border-white/20 hover:bg-white/15 transition-all duration-300">
              <div className="text-2xl sm:text-3xl font-bold text-green-300 drop-shadow-md">{profile.stats.totalMessages}</div>
              <div className="text-sm text-white/80 drop-shadow-sm">–°–æ–æ–±—â–µ–Ω–∏–π</div>
            </div>
            <div className="text-center p-4 sm:p-6 bg-white/10 rounded-xl backdrop-blur-sm border border-white/20 hover:bg-white/15 transition-all duration-300">
              <div className="text-2xl sm:text-3xl font-bold text-purple-300 drop-shadow-md">{profile.stats.favoriteBots}</div>
              <div className="text-sm text-white/80 drop-shadow-sm">–õ—é–±–∏–º—ã—Ö –±–æ—Ç–æ–≤</div>
            </div>
            <div className="text-center p-4 sm:p-6 bg-white/10 rounded-xl backdrop-blur-sm border border-white/20 hover:bg-white/15 transition-all duration-300">
              <div className="text-2xl sm:text-3xl font-bold text-orange-300 drop-shadow-md">‚ÇΩ{profile.stats.referralEarnings}</div>
              <div className="text-sm text-white/80 drop-shadow-sm">–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ</div>
            </div>
          </div>
        </div>

        {/* Tabs */}
        <div className="glass-card mb-8">
          <div className="border-b border-white/20">
            <nav className="flex overflow-x-auto scrollbar-hide px-6">
              {[
                { id: 'profile', label: '–ü—Ä–æ—Ñ–∏–ª—å', icon: 'üë§' },
                { id: 'achievements', label: '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è', icon: 'üèÜ' },
                { id: 'stats', label: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', icon: 'üìä' },
                { id: 'settings', label: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', icon: '‚öôÔ∏è' },
                { id: 'security', label: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', icon: 'üîí' },
                { id: 'notifications', label: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', icon: 'üîî' }
              ].map(tab => (
                <button
                  key={tab.id}
                  onClick={() => setActiveTab(tab.id as any)}
                  className={`py-4 px-4 border-b-2 font-medium text-sm flex items-center space-x-2 whitespace-nowrap flex-shrink-0 transition-all duration-200 ${
                    activeTab === tab.id
                      ? 'border-purple-400 text-purple-300'
                      : 'border-transparent text-white/60 hover:text-white/80'
                  }`}
                >
                  <span>{tab.icon}</span>
                  <span>{tab.label}</span>
                </button>
              ))}
            </nav>
          </div>

          {/* Tab Content */}
          <div className="p-6">
            {activeTab === 'profile' && (
              <div className="space-y-6">
                <div className="grid grid-cols-1 sm:grid-cols-2 gap-6">
                  <div className="bg-white/10 rounded-xl p-4 backdrop-blur-sm border border-white/20">
                    <h3 className="text-lg font-semibold text-white mb-3">–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                    <div className="space-y-3">
                      <div>
                        <label className="text-white/60 text-sm">–ò–º—è</label>
                        <p className="text-white font-medium">{profile.name}</p>
                      </div>
                      <div>
                        <label className="text-white/60 text-sm">Username</label>
                        <p className="text-white font-medium">{profile.username}</p>
                      </div>
                      <div>
                        <label className="text-white/60 text-sm">–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</label>
                        <p className="text-white font-medium">{new Date(profile.joinDate).toLocaleDateString()}</p>
                      </div>
                    </div>
                  </div>
                  
                  <div className="bg-white/10 rounded-xl p-4 backdrop-blur-sm border border-white/20">
                    <h3 className="text-lg font-semibold text-white mb-3">–ü—Ä–æ–≥—Ä–µ—Å—Å</h3>
                    <div className="space-y-3">
                      <div>
                        <label className="text-white/60 text-sm">–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å</label>
                        <p className="text-white font-medium">{profile.level} - {getLevelTitle(profile.level)}</p>
                      </div>
                      <div>
                        <label className="text-white/60 text-sm">–û–ø—ã—Ç</label>
                        <p className="text-white font-medium">{profile.experience} / {profile.nextLevelExp}</p>
                      </div>
                      <div>
                        <label className="text-white/60 text-sm">–î–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</label>
                        <p className="text-white font-medium">{profile.stats.daysActive}</p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            )}

            {activeTab === 'achievements' && (
              <div className="space-y-4">
                <h3 className="text-xl font-bold text-white mb-4">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h3>
                <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                  {profile.achievements.map((achievement) => (
                    <div
                      key={achievement.id}
                      className={`p-4 rounded-xl border transition-all duration-300 ${
                        achievement.unlocked
                          ? 'bg-white/10 border-green-400/50'
                          : 'bg-white/5 border-white/20 opacity-50'
                      }`}
                    >
                      <div className="flex items-center space-x-3 mb-3">
                        <div className={`text-2xl ${achievement.unlocked ? '' : 'grayscale'}`}>
                          {achievement.icon}
                        </div>
                        <div className="flex-1">
                          <h4 className="font-semibold text-white">{achievement.title}</h4>
                          <p className="text-sm text-white/60">{achievement.description}</p>
                        </div>
                      </div>
                      {achievement.unlocked && achievement.unlockedDate && (
                        <div className="text-xs text-green-400">
                          –ü–æ–ª—É—á–µ–Ω–æ {new Date(achievement.unlockedDate).toLocaleDateString()}
                        </div>
                      )}
                    </div>
                  ))}
                </div>
              </div>
            )}

            {activeTab === 'stats' && (
              <div className="space-y-6">
                <h3 className="text-xl font-bold text-white mb-4">–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                <div className="grid grid-cols-1 sm:grid-cols-2 gap-6">
                  <div className="bg-white/10 rounded-xl p-6 backdrop-blur-sm border border-white/20">
                    <h4 className="text-lg font-semibold text-white mb-4">–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</h4>
                    <div className="space-y-4">
                      <div className="flex justify-between">
                        <span className="text-white/60">–í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π</span>
                        <span className="text-white font-bold">{profile.stats.totalSessions}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-white/60">–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π</span>
                        <span className="text-white font-bold">{profile.stats.totalMessages}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-white/60">–î–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</span>
                        <span className="text-white font-bold">{profile.stats.daysActive}</span>
                      </div>
                    </div>
                  </div>
                  
                  <div className="bg-white/10 rounded-xl p-6 backdrop-blur-sm border border-white/20">
                    <h4 className="text-lg font-semibold text-white mb-4">–≠–∫–æ–Ω–æ–º–∏–∫–∞</h4>
                    <div className="space-y-4">
                      <div className="flex justify-between">
                        <span className="text-white/60">–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –¥–æ—Ö–æ–¥—ã</span>
                        <span className="text-white font-bold">‚ÇΩ{profile.stats.referralEarnings}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-white/60">–õ—é–±–∏–º—ã—Ö –±–æ—Ç–æ–≤</span>
                        <span className="text-white font-bold">{profile.stats.favoriteBots}</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            )}

            {activeTab === 'settings' && (
              <div className="space-y-6">
                <h3 className="text-xl font-bold text-white mb-4">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
                <div className="bg-white/10 rounded-xl p-6 backdrop-blur-sm border border-white/20">
                  <div className="space-y-4">
                    <div className="flex items-center justify-between">
                      <div>
                        <h4 className="font-semibold text-white">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h4>
                        <p className="text-sm text-white/60">–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö</p>
                      </div>
                      <button className="w-12 h-6 bg-purple-500 rounded-full relative">
                        <div className="w-4 h-4 bg-white rounded-full absolute top-1 right-1 transition-transform"></div>
                      </button>
                    </div>
                    
                    <div className="flex items-center justify-between">
                      <div>
                        <h4 className="font-semibold text-white">–¢–µ–º–Ω–∞—è —Ç–µ–º–∞</h4>
                        <p className="text-sm text-white/60">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–º–Ω—É—é —Ç–µ–º—É</p>
                      </div>
                      <button className="w-12 h-6 bg-purple-500 rounded-full relative">
                        <div className="w-4 h-4 bg-white rounded-full absolute top-1 right-1 transition-transform"></div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            )}

            {activeTab === 'security' && (
              <div className="space-y-6">
                <h3 className="text-xl font-bold text-white mb-4">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h3>
                <div className="bg-white/10 rounded-xl p-6 backdrop-blur-sm border border-white/20">
                  <div className="space-y-4">
                    <button className="w-full text-left p-4 bg-white/5 rounded-xl hover:bg-white/10 transition-colors">
                      <h4 className="font-semibold text-white">–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å</h4>
                      <p className="text-sm text-white/60">–û–±–Ω–æ–≤–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</p>
                    </button>
                    
                    <button className="w-full text-left p-4 bg-white/5 rounded-xl hover:bg-white/10 transition-colors">
                      <h4 className="font-semibold text-white">–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è</h4>
                      <p className="text-sm text-white/60">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –∞–∫–∫–∞—É–Ω—Ç–∞</p>
                    </button>
                  </div>
                </div>
              </div>
            )}

            {activeTab === 'notifications' && (
              <div className="space-y-6">
                <h3 className="text-xl font-bold text-white mb-4">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                <div className="bg-white/10 rounded-xl p-6 backdrop-blur-sm border border-white/20">
                  <div className="space-y-4">
                    <div className="flex items-center justify-between">
                      <div>
                        <h4 className="font-semibold text-white">Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h4>
                        <p className="text-sm text-white/60">–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ</p>
                      </div>
                      <button className="w-12 h-6 bg-gray-500 rounded-full relative">
                        <div className="w-4 h-4 bg-white rounded-full absolute top-1 left-1 transition-transform"></div>
                      </button>
                    </div>
                    
                    <div className="flex items-center justify-between">
                      <div>
                        <h4 className="font-semibold text-white">Email-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h4>
                        <p className="text-sm text-white/60">–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ email</p>
                      </div>
                      <button className="w-12 h-6 bg-purple-500 rounded-full relative">
                        <div className="w-4 h-4 bg-white rounded-full absolute top-1 right-1 transition-transform"></div>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default UserProfile; 