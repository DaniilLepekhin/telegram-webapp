version: '3.8'

services:
  traefik:
    image: 'traefik'
    restart: always
    command:
      - '--api=true'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.web.http.redirections.entryPoint.to=websecure'
      - '--entrypoints.web.http.redirections.entrypoint.scheme=https'
      - '--entrypoints.websecure.address=:443'
      - '--certificatesresolvers.mytlschallenge.acme.tlschallenge=true'
      - '--certificatesresolvers.mytlschallenge.acme.email=daniillepekhin@yandex.ru'
      - '--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json'
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - webapp-network

  postgres:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_DB=telegram_webapp
      - POSTGRES_USER=webapp_user
      - POSTGRES_PASSWORD=U3SfZ2cru
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - webapp-network

  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --requirepass U3SfZ2cru
    volumes:
      - redis_data:/data
    networks:
      - webapp-network

  backend:
    build: ./backend
    restart: always
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - PORT=4000
      - DATABASE_URL=postgresql://webapp_user:U3SfZ2cru@postgres:5432/telegram_analytics
      - REDIS_URL=redis://:U3SfZ2cru@redis:6379
      - JWT_SECRET=U3SfZ2cru
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-your_bot_token_here}
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/uploads:/app/uploads
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend.rule=Host(`app.daniillepekhin.ru`) && PathPrefix(`/api`)
      - traefik.http.routers.backend.tls=true
      - traefik.http.routers.backend.entrypoints=web,websecure
      - traefik.http.routers.backend.tls.certresolver=mytlschallenge
      - traefik.http.services.backend.loadbalancer.server.port=4000
    networks:
      - webapp-network

  frontend:
    build: ./frontend
    restart: always
    depends_on:
      - backend
    volumes:
      - ./nginx/webapp.conf:/etc/nginx/conf.d/default.conf
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend.rule=Host(`app.daniillepekhin.ru`)
      - traefik.http.routers.frontend.tls=true
      - traefik.http.routers.frontend.entrypoints=web,websecure
      - traefik.http.routers.frontend.tls.certresolver=mytlschallenge
      - traefik.http.services.frontend.loadbalancer.server.port=80
    networks:
      - webapp-network

  telegram-bot:
    build: ./telegram-bot
    restart: always
    depends_on:
      - backend
    environment:
      - TELEGRAM_BOT_TOKEN=your_bot_token_here
      - BACKEND_URL=http://backend:4000
    networks:
      - webapp-network

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    depends_on:
      - postgres
    environment:
      - N8N_HOST=n8npersonal.daniillepekhin.ru
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - DB_TYPE=postgresdb
      - DB_TABLE_PREFIX=n8n_
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=webapp_user
      - DB_POSTGRESDB_PASSWORD=U3SfZ2cru
    volumes:
      - n8n_data:/home/node/.n8n
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`n8npersonal.daniillepekhin.ru`)
      - traefik.http.routers.n8n.tls=true
      - traefik.http.routers.n8n.entrypoints=web,websecure
      - traefik.http.routers.n8n.tls.certresolver=mytlschallenge
    networks:
      - webapp-network

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=daniillepekhin@yandex.ru
      - PGADMIN_DEFAULT_PASSWORD=U3SfZ2cru
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=Host(`app.daniillepekhin.ru`) && PathPrefix(`/pgadmin`)
      - traefik.http.routers.pgadmin.tls=true
      - traefik.http.routers.pgadmin.entrypoints=web,websecure
      - traefik.http.routers.pgadmin.tls.certresolver=mytlschallenge
    networks:
      - webapp-network

  metabase:
    image: metabase/metabase:latest
    restart: always
    depends_on:
      - postgres
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=telegram_webapp
      - MB_DB_PORT=5432
      - MB_DB_USER=webapp_user
      - MB_DB_PASS=U3SfZ2cru
      - MB_DB_HOST=postgres
    volumes:
      - metabase_data:/metabase-data
    labels:
      - traefik.enable=true
      - traefik.http.routers.metabase.rule=Host(`app.daniillepekhin.ru`) && PathPrefix(`/metabase`)
      - traefik.http.routers.metabase.tls=true
      - traefik.http.routers.metabase.entrypoints=web,websecure
      - traefik.http.routers.metabase.tls.certresolver=mytlschallenge
    networks:
      - webapp-network

  prometheus:
    image: prom/prometheus:latest
    restart: always
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - webapp-network

  grafana:
    image: grafana/grafana:latest
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=U3SfZ2cru
    volumes:
      - grafana_data:/var/lib/grafana
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`app.daniillepekhin.ru`) && PathPrefix(`/grafana`)
      - traefik.http.routers.grafana.tls=true
      - traefik.http.routers.grafana.entrypoints=web,websecure
      - traefik.http.routers.grafana.tls.certresolver=mytlschallenge
    networks:
      - webapp-network

  backup:
    image: postgres:15
    restart: 'no'
    depends_on:
      - postgres
    environment:
      - PGPASSWORD=U3SfZ2cru
    volumes:
      - ./backups:/backups
    command: >
      sh -c '
        pg_dump -h postgres -U webapp_user -d telegram_webapp > /backups/backup_3808(date +%Y%m%d_%H%M%S).sql &&
        echo "Backup completed: backup_3808(date +%Y%m%d_%H%M%S).sql"
      '
    networks:
      - webapp-network

volumes:
  postgres_data:
  redis_data:
  n8n_data:
  pgadmin_data:
  metabase_data:
  prometheus_data:
  grafana_data:

networks:
  webapp-network:
    driver: bridge
